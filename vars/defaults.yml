---
# Used by nginx for the vhost of the server
server_name: sampleapp.uniquename.org

# Used as nginx site name, rails directory, among other things
app_name: sampleapp

# Unix user name to deploy as
deploy: deploy

# Crypted password for 'deploy' Unix user.
# To generate, use generate-crypted-password.py
password: $6$rounds=100000$RzZoQYJWNf78oDy5$tMfWCUcT0RW4OAHS/idG2P9IOElVhoZT3jhKNFmJOj8ZiIy.CCjhyVdEj899JUNUCd3TmTMgDxWyWgmD16liZ.

# Ruby version to install
ruby_version: 2.1.1
rbenv_makeopts: ""

# Postgresql database settings
database_name: sampleapp_production
database_user: sampleapp

# SECURITY BUG: cleartext password, visible in git repo.
# See below.
database_password: TOTALLY-INSECURE

# Alternatives:
# 0) Make ansible prompt for password, manual sync
# 1) use ansible vault, git-crypt, or some crypto solution here.
# 2) generate passwords on the fly with Ansible on both ends (Postgres/Rails database.yml)
# 3) use peer authentication (no password, OS auth) and create a Unix user per Rails app.
#
# #3 is probably best.
